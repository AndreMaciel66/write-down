{"version":3,"sources":["../node_modules/markdown-it-imsize/lib/imsize/types sync /^/.*$","components/MarkdownParser.js","components/Editor.js","assets/markdown-test-file.js","components/ArticleEdit.js","App.js","serviceWorker.js","index.js"],"names":["map","./bmp","./bmp.js","./gif","./gif.js","./jpg","./jpg.js","./png","./png.js","./psd","./psd.js","./svg","./svg.js","./tiff","./tiff.js","./webp","./webp.js","webpackContext","req","id","webpackContextResolve","__webpack_require__","e","Error","code","keys","Object","resolve","module","exports","md","MarkdownIt","html","xhtmlOut","breaks","langPrefix","linkify","typographer","quotes","use","abbr","anchor","level","deflist","emoji","footnote","highlight","imsize","autofill","mark","sub","sup","taskList","TOC","includeLevel","renderer","rules","token","idx","twemoji","parse","content","Editor","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","options","mode","theme","tabSize","styleActiveLine","lineWrapping","react_default","a","createElement","react_codemirror2","value","onBeforeChange","handleUpdate","onChange","editor","data","Component","markdownContent","trim","RenderingPanel","className","dangerouslySetInnerHTML","renderResult","MarkdownPanel","handleSourceUpdate","setState","src","markdownFeatureSrc","option","__html","MarkdownParser","render","dist","components_Editor","App","components_ArticleEdit","Boolean","window","location","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.907e5223.chunk.js","sourcesContent":["var map = {\n\t\"./bmp\": 27,\n\t\"./bmp.js\": 27,\n\t\"./gif\": 28,\n\t\"./gif.js\": 28,\n\t\"./jpg\": 29,\n\t\"./jpg.js\": 29,\n\t\"./png\": 30,\n\t\"./png.js\": 30,\n\t\"./psd\": 31,\n\t\"./psd.js\": 31,\n\t\"./svg\": 32,\n\t\"./svg.js\": 32,\n\t\"./tiff\": 33,\n\t\"./tiff.js\": 33,\n\t\"./webp\": 34,\n\t\"./webp.js\": 34\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 26;","import MarkdownIt from \"markdown-it\";\r\n\r\nimport abbr from 'markdown-it-abbr';\r\nimport anchor from \"markdown-it-anchor\";\r\nimport deflist from 'markdown-it-deflist';\r\nimport emoji from \"markdown-it-emoji\";\r\nimport footnote from 'markdown-it-footnote';\r\nimport highlight from \"markdown-it-highlightjs\";\r\nimport imsize from 'markdown-it-imsize';\r\nimport mark from 'markdown-it-mark';\r\nimport sub from 'markdown-it-sub';\r\nimport sup from 'markdown-it-sup';\r\nimport taskList from \"markdown-it-task-lists\";\r\nimport TOC from \"markdown-it-table-of-contents\";\r\n\r\nimport twemoji from 'twemoji';\r\n\r\nconst markdownOption = {\r\n  html:         false,        // Enable HTML tags in source\r\n  xhtmlOut:     false,        // Use '/' to close single tags (<br />)\r\n  breaks:       false,        // Convert '\\n' in paragraphs into <br>\r\n  langPrefix:   'language-',  // CSS language prefix for fenced blocks\r\n  linkify:      false,         // autoconvert URL-like texts to links\r\n  typographer:  true,         // Enable smartypants and other sweet transforms\r\n  quotes: '“”‘’',\r\n};\r\n\r\nconst md = new MarkdownIt(markdownOption);\r\n\r\nconst anchorOption = {\r\n  level: [1, 2, 3]\r\n};\r\n\r\nconst imsizeOption = {\r\n  autofill: true\r\n};\r\n\r\nconst TOC_Option = {\r\n  includeLevel: [1, 2, 3]\r\n};\r\n\r\n\r\nmd.use(abbr)\r\n  .use(anchor, anchorOption)\r\n  .use(deflist)\r\n  .use(emoji)\r\n  .use(footnote)\r\n  .use(highlight)\r\n  .use(imsize, imsizeOption)\r\n  .use(mark)\r\n  .use(sub)\r\n  .use(sup)\r\n  .use(taskList)\r\n  .use(TOC, TOC_Option);\r\n\r\n// change the output of emoji\r\nmd.renderer.rules.emoji = function(token, idx) {\r\n  return twemoji.parse(token[idx].content);\r\n};\r\n\r\nexport default md;\r\n","import React, { Component } from \"react\";\r\n// import SyntaxHighlighter from \"react-syntax-highlighter\";\r\n// import { docco } from \"react-syntax-highlighter/styles/hljs\";\r\n\r\nimport { Controlled as CodeMirror } from \"react-codemirror2\";\r\nimport 'codemirror/mode/gfm/gfm.js';\r\nimport \"codemirror/addon/selection/active-line\";\r\n// import 'codemirror/addon/scroll/simplescrollbars';\r\n// import 'codemirror/addon/scroll/simplescrollbars.css';\r\n\r\nimport 'codemirror/lib/codemirror.css';\r\nimport './theme/cherry.css';\r\nimport PropTypes from \"prop-types\";\r\n\r\n// import 'codemirror/theme/material.css';\r\n// import 'codemirror/theme/monokai.css';\r\n// import 'codemirror/theme/mdn-like.css';\r\n// import 'codemirror/theme/idea.css';\r\n//\r\n// // other theme\r\n// import 'code-mirror-themes/themes/bespin.css';\r\n// import 'code-mirror-themes/themes/rhuk.css';\r\n// import 'code-mirror-themes/themes/emacs-strict.css';\r\n// import 'code-mirror-themes/themes/fake.css';\r\n// import 'code-mirror-themes/themes/monokai-fannonedition.css';\r\n// import 'code-mirror-themes/themes/johnny.css';\r\n// import 'code-mirror-themes/themes/friendship-bracelet.css';\r\n\r\nclass Editor extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      options: {\r\n        mode: 'gfm',\r\n        theme: 'cherry',\r\n        tabSize: 2,\r\n        styleActiveLine: true,\r\n        lineWrapping: true,\r\n        // scrollbarStyle: 'overlay',\r\n        // allowDropFileTypes: ['text/markdown']\r\n      }\r\n    };\r\n  }\r\n\r\n  render() {\r\n\r\n    return (\r\n      <CodeMirror\r\n        value={this.props.value}\r\n        options={this.state.options}\r\n        onBeforeChange={this.props.handleUpdate}\r\n        onChange={(editor, data, value) => {}}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nEditor.propTypes = {\r\n  value: PropTypes.string,\r\n  handleUpdate: PropTypes.func\r\n};\r\n\r\nexport default Editor;\r\n","const markdownContent = `\r\n# h1 Heading 8-)\r\n## h2 Heading\r\n### h3 Heading\r\n#### h4 Heading\r\n##### h5 Heading\r\n###### h6 Heading\r\n\r\n## Table of content\r\n\r\nUse \\`[[toc]]\\` to display the table of content.\r\n\r\n[[toc]]\r\n\r\n## Horizontal Rules\r\n___\r\n\r\n---\r\n\r\n***\r\n\r\n## Typographic replacements\r\n\r\nEnable typographer option to see result.\r\n\r\n(c) (C) (r) (R) (tm) (TM) (p) (P) +-\r\n\r\ntest.. test... test..... test?..... test!....\r\n\r\n!!!!!! ???? ,,  -- ---\r\n\r\n\"Smartypants, double quotes\" and 'single quotes'\r\n\r\n## Emphasis\r\n\r\n**This is bold text**\r\n\r\n__This is bold text__\r\n\r\n*This is italic text*\r\n\r\n_This is italic text_\r\n\r\n~~Strikethrough~~\r\n\r\n## Blockquotes\r\n\r\n> Blockquotes can also be nested...\r\n>> ...by using additional greater-than signs right next to each other...\r\n> > > ...or with spaces between arrows.\r\n\r\n## Lists\r\n\r\nUnordered\r\n\r\n+ Create a list by starting a line with \\`+\\`, \\`-\\`, or \\`*\\`\r\n+ Sub-lists are made by indenting 2 spaces:\r\n  - Marker character change forces new list start:\r\n    * Ac tristique libero volutpat at\r\n    + Facilisis in pretium nisl aliquet\r\n    - Nulla volutpat aliquam velit\r\n+ Very easy!\r\n\r\nOrdered\r\n\r\n1. Lorem ipsum dolor sit amet\r\n2. Consectetur adipiscing elit\r\n3. Integer molestie lorem at massa\r\n\r\n1. You can use sequential numbers...\r\n1. ...or keep all the numbers as \\`1.\\`\r\n\r\nStart numbering with offset:\r\n\r\n57. foo\r\n1. bar\r\n\r\nGFM task list\r\n\r\n- [ ] Not done.\r\n- [X] Done.\r\n\r\n## Code\r\n\r\nInline \\`code\\`\r\n\r\nIndented code\r\n\r\n    // Some comments\r\n    line 1 of code\r\n    line 2 of code\r\n    line 3 of code\r\n\r\nBlock code \"fences\"\r\n\r\n\\`\\`\\`\r\nSample text here...\r\n\\`\\`\\`\r\n\r\nSyntax highlighting\r\n\r\n\\`\\`\\` js\r\nvar foo = function (bar) {\r\n  return bar++;\r\n};\r\n\r\nconsole.log(foo(5));\r\n\\`\\`\\`\r\n\r\nDiff comparison\r\n\r\n\\`\\`\\`diff\r\n+ this text is highlighted in green\r\n- this text is highlighted in red\r\n\\`\\`\\`\r\n\r\n## Tables\r\n\r\n| Option | Description |\r\n| ------ | ----------- |\r\n| data   | path to data files to supply the data that will be passed into templates. |\r\n| engine | engine to be used for processing templates. Handlebars is the default. |\r\n| ext    | extension to be used for dest files. |\r\n\r\nRight aligned columns\r\n\r\n| Option | Description |\r\n| ------:| -----------:|\r\n| data   | path to data files to supply the data that will be passed into templates. |\r\n| engine | engine to be used for processing templates. Handlebars is the default. |\r\n| ext    | extension to be used for dest files. |\r\n\r\n## Links\r\n\r\n[link text](http://dev.nodeca.com)\r\n\r\n[link with title](http://nodeca.github.io/pica/demo/ \"title text!\")\r\n\r\nAutoconverted link https://github.com/nodeca/pica (enable linkify to see)\r\n\r\n## Images\r\n\r\n![Minion](https://octodex.github.com/images/minion.png =100x)\r\n![Stormtroopocat](https://octodex.github.com/images/stormtroopocat.jpg \"The Stormtroopocat\" =200x)\r\n\r\nLike links, Images also have a footnote style syntax\r\n\r\n![Alt text][id]\r\n\r\nWith a reference later in the document defining the URL location:\r\n\r\n[id]: https://octodex.github.com/images/dojocat.jpg  \"The Dojocat\"\r\n\r\n## Plugins\r\n\r\nThe killer feature of \\`markdown-it\\` is very effective support of\r\n[syntax plugins](https://www.npmjs.org/browse/keyword/markdown-it-plugin).\r\n\r\n### [Emojies](https://github.com/markdown-it/markdown-it-emoji)\r\n\r\n> Classic markup: :wink: :scream: :joy_cat: :scream_cat: :laughing: :yum:\r\n>\r\n> Shortcuts (emoticons): :-D ;) 8-) \r\n\r\nsee [how to change output](https://github.com/markdown-it/markdown-it-emoji#change-output) with twemoji.\r\n\r\n### [Subscript](https://github.com/markdown-it/markdown-it-sub) / [Superscript](https://github.com/markdown-it/markdown-it-sup)\r\n\r\n- 19^th^\r\n- H~2~O\r\n\r\n\r\n### [\\\\<mark>](https://github.com/markdown-it/markdown-it-mark)\r\n\r\n==Marked text==\r\n\r\n### [Footnotes](https://github.com/markdown-it/markdown-it-footnote)\r\n\r\nFootnote 1 link[^first].\r\n\r\nFootnote 2 link[^second].\r\n\r\nInline footnote^[Text of inline footnote] definition.\r\n\r\nDuplicated footnote reference[^second].\r\n\r\n[^first]: Footnote **can have markup**\r\n\r\n    and multiple paragraphs.\r\n\r\n[^second]: Footnote text.\r\n\r\n### [Definition lists](https://github.com/markdown-it/markdown-it-deflist)\r\n\r\nTerm 1\r\n\r\n:   Definition 1\r\nwith lazy continuation.\r\n\r\nTerm 2 with *inline markup*\r\n\r\n:   Definition 2\r\n\r\n        { some code, part of Definition 2 }\r\n\r\n    Third paragraph of definition 2.\r\n\r\n_Compact style:_\r\n\r\nTerm 1\r\n  ~ Definition 1\r\n\r\nTerm 2\r\n  ~ Definition 2a\r\n  ~ Definition 2b\r\n\r\n### [Abbreviations](https://github.com/markdown-it/markdown-it-abbr)\r\n\r\nThis is HTML abbreviation example.\r\n\r\nIt converts \"HTML\", but keep intact partial entries like \"xxxHTMLyyy\" and so on.\r\n\r\n*[HTML]: Hyper Text Markup Language\r\n`;\r\n\r\nexport default markdownContent.trim();","import React, { Component } from \"react\";\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { ScrollSync, ScrollSyncPane } from 'react-scroll-sync';\r\n\r\nimport MarkdownParser from './MarkdownParser';\r\nimport Editor from './Editor';\r\n\r\nimport 'github-markdown-css';\r\nimport 'highlight.js/styles/github.css';\r\n\r\nimport './ArticleEdit.css';\r\n\r\nimport markdownFeatureSrc from '../assets/markdown-test-file';\r\n// import markdownCheatSheet from '../assets/markdown-cheatsheet';\r\n\r\nclass MarkdownPanel extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      src: markdownFeatureSrc,\r\n      option: {\r\n        mode: 'gfm',\r\n        theme: 'cherry',\r\n        tabSize: 2,\r\n        styleActiveLine: true,\r\n      }\r\n    };\r\n  }\r\n\r\n  handleSourceUpdate = (editor, data, value) => {\r\n    this.setState({\r\n      src: value\r\n    });\r\n  };\r\n\r\n  render() {\r\n    let renderResult = {\r\n      __html: MarkdownParser.render(this.state.src)\r\n    };\r\n\r\n    return (\r\n      <ScrollSync>\r\n        <div className=\"edit-wrapper\">\r\n          <ScrollSyncPane>\r\n            <div className='editor'>\r\n              <Editor\r\n                value={this.state.src}\r\n                options={this.state.option}\r\n                handleUpdate={this.handleSourceUpdate}\r\n              />\r\n            </div>\r\n          </ScrollSyncPane>\r\n\r\n          <ScrollSyncPane>\r\n            <div className='rendering'>\r\n              <RenderingPanel renderResult={renderResult}/>\r\n            </div>\r\n          </ScrollSyncPane>\r\n        </div>\r\n      </ScrollSync>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nfunction RenderingPanel(props) {\r\n  return (\r\n    <div className='markdown-body' dangerouslySetInnerHTML={props.renderResult}/>\r\n  )\r\n}\r\n\r\nRenderingPanel.propTypes = {\r\n  renderResult: PropTypes.object\r\n};\r\n\r\n\r\n\r\nexport default MarkdownPanel;\r\n","import React, { Component } from 'react';\nimport 'normalize.css/normalize.css';\n\nimport './App.css';\n\nimport ArticleEdit from './components/ArticleEdit';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">Let's start to write down.</header>\n        <ArticleEdit/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}